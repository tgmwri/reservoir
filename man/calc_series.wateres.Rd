% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wateres.R
\name{calc_series}
\alias{calc_series}
\alias{calc_series.wateres}
\title{Calculation of reservoir time series}
\usage{
calc_series(reser, storage, yield, throw_exceed, initial_storage, initial_level,
  initial_pos, last_pos, get_level, till_def, first_def_pos, storage_optim,
  yield_max, complex_properties)

\method{calc_series}{wateres}(reser, storage = attr(reser, "storage"),
  yield = attr(reser, "yield"), throw_exceed = FALSE,
  initial_storage = storage[1], initial_level, initial_pos = 1,
  last_pos = nrow(reser), get_level = FALSE, till_def = FALSE,
  first_def_pos = initial_pos, storage_optim = attr(reser, "storage_optim"),
  yield_max = attr(reser, "yield_max"), complex_properties = TRUE)
}
\arguments{
\item{reser}{A \code{wateres} object.}

\item{storage}{A maximum reservoir storage in m3, either a value of fixed maximum storage or a vector
of the length of the reservoir series plus one. If not given, taken from the \code{reser} object.}

\item{yield}{A required yield in m3.s-1, either a value of fixed yield or a vector of the same length as the reservoir series.}

\item{throw_exceed}{Whether volume exceeding storage will be thrown or added to yield.}

\item{initial_storage}{A value of initial reservoir storage in m3. If not specified, the reservoir is considered to be full.}

\item{initial_level}{A value of initial water level in m.a.s.l. If specified and elevation-area-storage relationship is not provided within the
\code{reser} object, it will be ignored; otherwise the \code{initial_storage} argument will be ignored.}

\item{initial_pos}{An index of time series where the calculation starts. If greater than one, returned time series will be shorter than the input.}

\item{last_pos}{An index of time series where the calculation stops.}

\item{get_level}{Whether to obtain water level series for calculated storages. It is ignored if no elevation-area-storage relationship
is provided within the \code{reser} object.}

\item{till_def}{If TRUE, the calculation will stop at time step when any deficit occurs provided that this time step is greater or equal to \code{first_def_pos}.}

\item{first_def_pos}{If the \code{till_def} argument is TRUE, it means the first index of time step when a deficit will stop the calculation.}

\item{storage_optim}{An optimum reservoir storage in m3, i.e. the value which will be tried to be not exceeded if this is allowed by the value of \code{max_yield}.
Either a value of fixed optimum storage or a vector of the length of the reservoir series plus one.}

\item{yield_max}{A maximum value of yield (in m3.s-1) that can be obtained from storage below the maximum value (the \code{storage} argument). Hence, if
the reservoir storage exceeds the \code{storage} value and \code{throw_exceed} is not set to \code{TRUE}, the resulting yield may be greater than \code{yield_max}.
The maximum yield can be interpreted as an outflow capacity of the reservoir in case that its dam is not overflown.
Either a value of fixed yield or a vector of the same length as the reservoir series.}

\item{complex_properties}{If FALSE, constant values of \code{storage} and \code{yield} will be required and \code{storage_optim} and \code{yield_max} will not be considered.
This is needed for calculation with generated values, as it is done e.g. in the \link{sry.wateres} function.}
}
\value{
A \code{wateres_series} object which is a data table with water balance variables: inflow (in m3.s-1), storage (in m3), yield (in m3.s-1),
precipitation, evaporation, water use, deficits and transfer (in m3). The deficits represent the missing volume which would satisfy the remaining
sum of yield and withdrawal demands. There is the water transfer only in case of non-zero values, resulting from calculations of a reservoir system.
Positive values of transfer mean additional inflow whereas negative represent additional withdrawal.
Additionally, water levels are included if the \code{get_level} argument is TRUE.
}
\description{
Calculates time series of water balance variables for the reservoir. If provided in the \code{reser} object, the precipitation, evaporation,
water use or transfer variables are applied.
}
\details{
When calculating water balance, a simple explicit method is applied. Finally, the initial time step of storage is omitted
to get a time series of the same length as for other variables.

If one of \code{storage_optim} or \code{yield_max} is missing while the second is specified, both values are set to NULL and thus they are not considered in the calculation.
}
\examples{
reser = data.frame(
    Q = c(0.078, 0.065, 0.168, 0.711, 0.154, 0.107, 0.068, 0.057, 0.07, 0.485, 0.252, 0.236,
          0.498, 0.248, 0.547, 0.197, 0.283, 0.191, 0.104, 0.067, 0.046, 0.161, 0.16, 0.094),
    DTM = seq(as.Date("2000-01-01"), by = "months", length.out = 24))
reser = as.wateres(reser, storage = 14.4e6, area = 754e3)
resul = calc_series(reser, 14.4e6, 0.14)
}
\seealso{
\code{\link{plot.wateres_series}} for plotting the time series
}
